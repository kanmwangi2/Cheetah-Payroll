rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profile access - allow users to read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow any authenticated user to create their profile (for first-time login)
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Allow reading all users for role checking (needed for admin functions)
    match /users/{userId} {
      allow read: if request.auth != null;
    }

    // App-level settings - accessible only to primary_admin and app_admin
    match /app_settings/{settingId} {
      allow read, write: if request.auth != null && isPrimaryOrAppAdmin();
    }

    // Company-level collections
    match /companies/{companyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isCompanyAdminOrHigher(companyId);
      allow create: if request.auth != null; // Allow creating companies

      // Company subcollections
      match /{collection}/{docId} {
        allow read, write: if request.auth != null && isCompanyUser(companyId);
      }
    }

    // Helper functions
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isPrimaryOrAppAdmin() {
      return getUserData().role in ['primary_admin', 'app_admin'];
    }
    
    function isCompanyAdminOrHigher(companyId) {
      let user = getUserData();
      return user.role in ['primary_admin', 'app_admin', 'company_admin'] && 
             (user.role in ['primary_admin', 'app_admin'] || companyId in user.companyIds);
    }
    
    function isPayrollPreparerOrHigher(companyId) {
      let user = getUserData();
      return user.role in ['primary_admin', 'app_admin', 'company_admin', 'payroll_preparer'] && 
             (user.role in ['primary_admin', 'app_admin'] || companyId in user.companyIds);
    }
    
    function isCompanyUser(companyId) {
      let user = getUserData();
      return user.role in ['primary_admin', 'app_admin'] || companyId in user.companyIds;
    }
  }
}
