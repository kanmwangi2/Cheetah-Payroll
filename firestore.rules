rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // User profile access
    match /app_settings/users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Global app settings (Primary/Admin only)
    match /app_settings/{doc=**} {
      allow read, write: if isPrimaryOrAppAdmin();
    }

    // Company-level collections
    match /companies/{companyId} {
      allow read: if isCompanyUser(companyId);
      allow write: if isCompanyAdminOrHigher(companyId);

      // Company subcollections
      match /users/{userId} {
        allow read: if isCompanyUser(companyId);
        allow write: if isCompanyAdminOrHigher(companyId);
      }
      match /staff/{staffId} {
        allow read: if isCompanyUser(companyId);
        allow write: if isCompanyAdminOrHigher(companyId);
      }
      match /payments/{paymentId} {
        allow read: if isCompanyUser(companyId);
        allow write: if isCompanyAdminOrHigher(companyId);
      }
      match /deductions/{deductionId} {
        allow read: if isCompanyUser(companyId);
        allow write: if isCompanyAdminOrHigher(companyId);
      }
      match /payrolls/{payrollId} {
        allow read: if isCompanyUser(companyId);
        allow write: if isPayrollPreparerOrHigher(companyId);
        // Staff payroll subcollection
        match /staff_payroll/{staffId} {
          allow read: if isCompanyUser(companyId);
          allow write: if isPayrollPreparerOrHigher(companyId);
        }
      }
    }

    function isPrimaryOrAppAdmin() {
      return get(/databases/$(database)/documents/app_settings/users/$(request.auth.uid)).data.role in ['primary_admin', 'app_admin'];
    }
    function isCompanyAdminOrHigher(companyId) {
      let user = get(/databases/$(database)/documents/app_settings/users/$(request.auth.uid)).data;
      return user.role in ['primary_admin', 'app_admin', 'company_admin'] && companyId in user.accessible_companies;
    }
    function isPayrollPreparerOrHigher(companyId) {
      let user = get(/databases/$(database)/documents/app_settings/users/$(request.auth.uid)).data;
      return user.role in ['primary_admin', 'app_admin', 'company_admin', 'payroll_preparer'] && companyId in user.accessible_companies;
    }
    function isCompanyUser(companyId) {
      let user = get(/databases/$(database)/documents/app_settings/users/$(request.auth.uid)).data;
      return companyId in user.accessible_companies;
    }
  }
}
